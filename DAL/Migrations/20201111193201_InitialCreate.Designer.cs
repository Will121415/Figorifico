// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(FigorificoContext))]
    [Migration("20201111193201_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.CategoryProduct", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TypeProductIdType")
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IdCategory");

                    b.HasIndex("TypeProductIdType");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("Entity.Product", b =>
                {
                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Iva")
                        .HasColumnType("int");

                    b.Property<float>("PurchasePrice")
                        .HasColumnType("real");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("SalePrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<float>("SuggestedPrice")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Entity.TypeProduct", b =>
                {
                    b.Property<string>("IdType")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdType");

                    b.ToTable("TypeProduct");
                });

            modelBuilder.Entity("Entity.CategoryProduct", b =>
                {
                    b.HasOne("Entity.TypeProduct", "TypeProduct")
                        .WithMany()
                        .HasForeignKey("TypeProductIdType");
                });
#pragma warning restore 612, 618
        }
    }
}
